extends layouts/default.pug

block content
  main.content-page
    h3.content-page__title Types and Arrays
    h4.content-page__title Content Covered

    ul.content-page__list
      li 
        a(href="#first") String and Number Types
      li 
        a(href="#second") Boolean Types
      li 
        a(href="#third") undefined and null
      li 
        a(href="#fourth") Arrays
      li 
        a(href="#fifth") Array Features

    hr

    h3.content-page__title#first String and Number Types

    p Javascript has built-in functions that will identify the type of a variable.

    +formatHtmlCodeMultiline("Javascript", "let value = 'apple';", "typeof(value); // string", "let newValue = 23;", "typeof(newValue); // number")

    p 
      |One quirk with how numbers are handled is when adding two decimal point values. Another is dividing a number by zero, which results in 
      span.code-short Infinity
      | rather than an error. Finally, when dividing 0 by 0 the result is 
      span.code-short NaN
      | - not a number, but the type is number when checked.

    +formatHtmlCodeMultiline("Javascript", "let value = 2.6 + 4.1; // 6.699999999999999", "let value2 = 5 / 0; // Infinity", "let value3 = 0 / 0; // NaN", "typeof(value3); // number")

    h3.content-page__title.new-section#second Boolean Types

    p Another type in Javascript is Boolean Types, which has the value of 
      span.code-short true
      | or 
      span.code-short false

    +formatHtmlCodeMultiline("Javascript", "let value = false;", "typeof(value); // boolean")

    h3.content-page__title.new-section#third undefined and null

    p Variables are initialized with undefined if no value is assigned. If developers want to set a variable to nothing, 
      span.code-short null
      | is used.

    +formatHtmlCodeMultiline("Javascript", "let salesTax; // type is undefined", "salesTax = null // type is now null")

    h3.content-page__title.new-section#fourth Arrays

    p Arrays are meant to store multiple pieces of data into a single variable.

    +formatHtmlCodeMultiline("Javascript", "let items = [1, 2, 3]; // initializes an array", "items[0]; // returns 1", "items[3]; // returns undefined")

    p Arrays can hold any data type, even mixed types of data, even though this isn't a common practice.

    +formatHtmlCodeMultiline("Javascript", "let cards = [24, 'King', true, 'Jack'];", "cards[1]; // King")

    h3.content-page__title.new-section#fifth Array Features

    p Arrays have several built-in methods in Javascript that can be used to manipulate arrays.

    p Some methods that can be used include 
      span.code-short .length
      | to determine the number of items in an array 
      span.code-short .push()
      | to add an value to the end of an array

    +formatHtmlCodeMultiline("Javascript", "let values = [2, 5, 12, 26];", "values.length; // 4", "values.push(5); // [2, 5, 12, 26, 5]")

    p Using another method 
      span.code-short .pop()
      | will remove the last item from array and can store it in a variable

    +formatHtmlCodeMultiline("Javascript", "let values = [2, 5, 12, 26];", "let val = values.pop(); // val = 26")

    p To remove the first value from the array the method 
      span.code-short .shift()
      | will remove the first value and the value can be stored in a variable

    +formatHtmlCodeMultiline("Javascript", "let values = [2, 5, 12, 26];", "let val = values.shift(); // val = 2")

    p To remove a particular value from an array 
      span.code-short .splice(index, number of values to delete, any items to be added)
      | can be used to add values to the beginning of the array.

    +formatHtmlCodeMultiline("Javascript", "let values = [2, 5, 12, 26];", "values.splice(0, 1);", "values // [5, 12, 26]")

    p There are many more array methods.